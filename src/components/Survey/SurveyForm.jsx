import { useEffect, useState } from 'react';
import { useLocation } from "react-router-dom";
import './SurveyForm.css';
import BackButton from '../ButtonBack';
import Reciepie from '../Reciepie'; // new import
import PropTypes from "prop-types";
const TelegramWebApp = window.Telegram.WebApp;

export default function SurveyForm({ price }) {
  const location = useLocation();
  const queryPrice = Number(new URLSearchParams(location.search).get('price')) || price;
  
  const [showPopup, setShowPopup] = useState(false);
  const [totalPrice, setTotalPrice] = useState(queryPrice);
  const [formData, setFormData] = useState({
    formRole: '',         // –ö—Ç–æ –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—É?
    songFor: '',          // –î–ª—è –∫–æ–≥–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø–µ—Å–Ω—è?
    heroName: '',
    heroOrigin: '',
    heroItem: '',
    job: '',
    equipment: '',
    motivation: '',
    comrades: '',
    moments: '',
    words: '', // already used in question 9
    additionalChecks: {
      remembrance: false,
      personalMessage: false,
      specialPhrases: false,
      futureMessage: false
    },
    // New fields for "–ß—Ç–æ –µ—â—ë –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å?"
    remembranceText: '',
    personalMessageText: '',
    specialPhrasesText: '',
    futureMessageText: '',
    otherText: ''
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData({ ...formData, [name]: value });
  };

  // const handleCheckboxChange = (e) => {
  //   const { name, checked } = e.target;
  //   setFormData(prev => ({
  //     ...prev,
  //     additionalChecks: {
  //       ...prev.additionalChecks,
  //       [name]: checked
  //     }
  //   }));
  // };

  const handleSubmit = async (e) => {
    e.preventDefault();

    try {
      const botToken = '8151650888:AAFSJqYDHUtrii-7WS8sBDgi0MGtmYosg9k';
      const chatId = TelegramWebApp.initDataUnsafe.user?.id; // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (!chatId) {
        alert("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à Telegram ID.");
        return;
      }

      const message = `
üìã *–ù–æ–≤–∞—è –∞–Ω–∫–µ—Ç–∞*  
‚Ä¢ –ö—Ç–æ –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—É: ${formData.formRole}  
‚Ä¢ –î–ª—è –∫–æ–≥–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø–µ—Å–Ω—è: ${formData.songFor}  

*–û –≥–µ—Ä–æ–µ*  
1. –ò–º—è –∏ –ø–æ–∑—ã–≤–Ω–æ–µ: ${formData.heroName}  
2. –†–æ–¥–∏–Ω–∞: ${formData.heroOrigin}  
3. –û—Å–æ–±–∞—è –≤–µ—â—å/—Å–∏–º–≤–æ–ª: ${formData.heroItem}  

*–û —Å–ª—É–∂–±–µ*  
4. –ß–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π: ${formData.job}  
5. –¢–µ—Ö–Ω–∏–∫–∞/–æ—Ä—É–∂–∏–µ: ${formData.equipment}  

*–û —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ, –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –∫–æ–º–∞–Ω–¥–µ*  
6. –ß—Ç–æ –¥–∞—ë—Ç —Å–∏–ª—É –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—é: ${formData.motivation}  
7. –ë–æ–µ–≤—ã–µ —Ç–æ–≤–∞—Ä–∏—â–∏: ${formData.comrades}  

*–õ–∏—á–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –≤ –ø–µ—Å–Ω—é*  
8. –ú–æ–º–µ–Ω—Ç—ã –∏–∑ –∂–∏–∑–Ω–∏ –≥–µ—Ä–æ—è: ${formData.moments}  
9. –í–∞–∂–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–ª–∏ —Ü–∏—Ç–∞—Ç—ã: ${formData.words}  
10. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ: 
   –í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Å–ª—É–∂–±–µ: ${formData.additionalChecks.remembrance ? '‚úì' : '‚úó'}
   –õ–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ: ${formData.additionalChecks.personalMessage ? '‚úì' : '‚úó'}
   –û—Å–æ–±—ã–µ —Ñ—Ä–∞–∑—ã: ${formData.additionalChecks.specialPhrases ? '‚úì' : '‚úó'}
   –ü–æ—Å–ª–∞–Ω–∏–µ –≤ –±—É–¥—É—â–µ–µ: ${formData.additionalChecks.futureMessage ? '‚úì' : '‚úó'}
   –î—Ä—É–≥–æ–µ: ${formData.otherText}
      `;
       const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: chatId,
          text: message,
          parse_mode: "Markdown",
          reply_markup: {
            inline_keyboard: [
              [{ text: `–û–ø–ª–∞—Ç–∏—Ç—å ${totalPrice}‚ÇΩ`, url: "https://t.me/PATRIOT_MNGR" }]
            ]
          }
        })
      });
      console.log(typeof chatId);
      const response1 = await fetch(`https://api.telegram.org/bot${adminBotToken}/sendMessage`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: 6398268582,
          text: adminMessage,
          parse_mode: "Markdown",
        }),
      });
      const response2 = await fetch(`https://api.telegram.org/bot${adminBotToken}/sendMessage`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          chat_id: 6398268582,
          text: adminMessage,
          parse_mode: "Markdown",
        }),
      });
      const result = await response.json();
      if (result.ok & response1.ok & response2.ok) {
        alert("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.");
        // –ü–æ–∫–∞–∑–∞—Ç—å popup –≤–º–µ—Å—Ç–æ –∑–∞–∫—Ä—ã—Ç–∏—è WebApp.
        setShowPopup(true);
      } else {
        alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–∞–Ω–Ω—ã—Ö.");
      }
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞:", error);
      alert("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ.");
    }
  };
  useEffect(() => {
    setTotalPrice(queryPrice);
    console.log('Total price:', totalPrice);
  }, [queryPrice]);
  return (
    <>
      <div className={showPopup ? "blur-background" : ""}>
        <div className='h-15'>
          <BackButton/>
        </div>
        <form className="px-5 py-10" onSubmit={handleSubmit}>
          {/* Updated custom radio group for formRole */}
          <h2 className='text-2xl text-center mb-5 font-header_form'>–î–ª—è –∫–æ–≥–æ</h2>
          <div className="w-full px-4 py-5 bg-white flex flex-col gap-3 rounded-md shadow-[0px_0px_15px_rgba(0,0,0,0.09)]">
            <legend className="text-lg font-semibold mb-3 select-none text-black">1 –ö—Ç–æ –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—É?</legend>
            <label
              htmlFor="option1"
              className={`font-medium h-14 relative hover:bg-zinc-100 flex items-center px-3 gap-3 rounded-lg select-none ${formData.formRole === "–Ø —Å–æ–ª–¥–∞—Ç, —Ö–æ—á—É –ø–µ—Å–Ω—é –æ —Å–µ–±–µ" ? "text-blue-500 bg-blue-50 ring-blue-300 ring-1" : ""}`}
              onClick={() => setFormData({ ...formData, formRole: "–Ø —Å–æ–ª–¥–∞—Ç, —Ö–æ—á—É –ø–µ—Å–Ω—é –æ —Å–µ–±–µ" })}
            >
              <div className="w-5">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className={`h-5 w-5 ${formData.formRole === "–Ø —Å–æ–ª–¥–∞—Ç, —Ö–æ—á—É –ø–µ—Å–Ω—é –æ —Å–µ–±–µ" ? "text-blue-500" : "text-gray-300"}`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fillRule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-10.707a1 1 0 00-1.414-1.414L9 9.586 7.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clipRule="evenodd"
                  />
                </svg>
              </div>
              –Ø —Å–æ–ª–¥–∞—Ç, —Ö–æ—á—É –ø–µ—Å–Ω—é –æ —Å–µ–±–µ
            </label>
            <label
              htmlFor="option2"
              className={`font-medium h-14 relative hover:bg-zinc-100 flex items-center px-3 gap-3 rounded-lg select-none ${formData.formRole === "–Ø –±–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫–∞ (–∂–µ–Ω–∞, –º–∞—Ç—å, –æ—Ç–µ—Ü, –¥—Ä—É–≥)" ? "text-blue-500 bg-blue-50 ring-blue-300 ring-1" : ""}`}
              onClick={() => setFormData({ ...formData, formRole: "–Ø –±–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫–∞ (–∂–µ–Ω–∞, –º–∞—Ç—å, –æ—Ç–µ—Ü, –¥—Ä—É–≥)" })}
            >
              <div className="w-5">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className={`h-5 w-5 ${formData.formRole === "–Ø –±–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫–∞ (–∂–µ–Ω–∞, –º–∞—Ç—å, –æ—Ç–µ—Ü, –¥—Ä—É–≥)" ? "text-blue-500" : "text-gray-300"}`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fillRule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-10.707a1 1 0 00-1.414-1.414L9 9.586 7.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clipRule="evenodd"
                  />
                </svg>
              </div>
              –Ø –±–ª–∏–∑–∫–∏–π —á–µ–ª–æ–≤–µ–∫–∞ (–∂–µ–Ω–∞, –º–∞—Ç—å, –æ—Ç–µ—Ü, –¥—Ä—É–≥)
            </label>
            <label
              htmlFor="option3"
              className={`font-medium h-14 relative hover:bg-zinc-100 flex items-center px-3 gap-3 rounded-lg select-none ${formData.formRole === "–Ø —Å–æ—Å–ª—É–∂–∏–≤–µ—Ü" ? "text-blue-500 bg-blue-50 ring-blue-300 ring-1" : ""}`}
              onClick={() => setFormData({ ...formData, formRole: "–Ø —Å–æ—Å–ª—É–∂–∏–≤–µ—Ü" })}
            >
              <div className="w-5">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className={`h-5 w-5 ${formData.formRole === "–Ø —Å–æ—Å–ª—É–∂–∏–≤–µ—Ü" ? "text-blue-500" : "text-gray-300"}`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fillRule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-10.707a1 1 0 00-1.414-1.414L9 9.586 7.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clipRule="evenodd"
                  />
                </svg>
              </div>
              –Ø —Å–æ—Å–ª—É–∂–∏–≤–µ—Ü
            </label>
          </div>


          <div className="w-full mb-5 px-4 py-5 bg-white flex flex-col gap-3 rounded-md shadow-[0px_0px_15px_rgba(0,0,0,0.09)] mt-5">
            <legend className="text-lg font-semibold mb-3 select-none text-black">2. –î–ª—è –∫–æ–≥–æ —Å–æ–∑–¥–∞—ë—Ç—Å—è –ø–µ—Å–Ω—è?</legend>
            <label
              htmlFor="option1_song"
              className={`font-medium h-14 relative hover:bg-zinc-100 flex items-center px-3 gap-3 rounded-lg select-none ${formData.songFor === "–î–ª—è —Å–æ–ª–¥–∞—Ç–∞ –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π" ? "text-blue-500 bg-blue-50 ring-blue-300 ring-1" : ""}`}
              onClick={() => setFormData({ ...formData, songFor: "–î–ª—è —Å–æ–ª–¥–∞—Ç–∞ –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π" })}
            >
              <div className="w-5">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className={`h-5 w-5 ${formData.songFor === "–î–ª—è —Å–æ–ª–¥–∞—Ç–∞ –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π" ? "text-blue-500" : "text-gray-300"}`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-10.707a1 1 0 00-1.414-1.414L9 9.586 7.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
              </div>
              –î–ª—è —Å–æ–ª–¥–∞—Ç–∞ –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π
            </label>
            <label
              htmlFor="option2_song"
              className={`font-medium h-14 relative hover:bg-zinc-100 flex items-center px-3 gap-3 rounded-lg select-none ${formData.songFor === "–û—Ç —Å–æ–ª–¥–∞—Ç–∞ –±–ª–∏–∑–∫–∏–º" ? "text-blue-500 bg-blue-50 ring-blue-300 ring-1" : ""}`}
              onClick={() => setFormData({ ...formData, songFor: "–û—Ç —Å–æ–ª–¥–∞—Ç–∞ –±–ª–∏–∑–∫–∏–º" })}
            >
              <div className="w-5">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className={`h-5 w-5 ${formData.songFor === "–û—Ç —Å–æ–ª–¥–∞—Ç–∞ –±–ª–∏–∑–∫–∏–º" ? "text-blue-500" : "text-gray-300"}`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-10.707a1 1 0 00-1.414-1.414L9 9.586 7.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
              </div>
              –û—Ç —Å–æ–ª–¥–∞—Ç–∞ –±–ª–∏–∑–∫–∏–º
            </label>
            <label
              htmlFor="option3_song"
              className={`font-medium h-14 relative hover:bg-zinc-100 flex items-center px-3 gap-3 rounded-lg select-none ${formData.songFor === "–ß—Ç–æ–±—ã —É–≤–µ–∫–æ–≤–µ—á–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é" ? "text-blue-500 bg-blue-50 ring-blue-300 ring-1" : ""}`}
              onClick={() => setFormData({ ...formData, songFor: "–ß—Ç–æ–±—ã —É–≤–µ–∫–æ–≤–µ—á–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é" })}
            >
              <div className="w-5">
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  className={`h-5 w-5 ${formData.songFor === "–ß—Ç–æ–±—ã —É–≤–µ–∫–æ–≤–µ—á–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é" ? "text-blue-500" : "text-gray-300"}`}
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-10.707a1 1 0 00-1.414-1.414L9 9.586 7.707 8.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clipRule="evenodd" />
                </svg>
              </div>
              –ß—Ç–æ–±—ã —É–≤–µ–∫–æ–≤–µ—á–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é
            </label>
          </div>

          <h2 className='text-2xl text-center font-header_form'>–û –≥–µ—Ä–æ–µ</h2>
          <div>
            <div className="w-full p-5 bg-white rounded-lg mt-5 mb-5">
            <label className='font-semibold text-lg'>1.–ö–∞–∫ –µ–≥–æ –∑–æ–≤—É—Ç? –ö–∞–∫–æ–µ —É –Ω–µ–≥–æ –ø–æ–∑—ã–≤–Ω–æ–µ?</label>
              <input
                type="text"
                name="heroName"
                value={formData.heroName}
                onChange={handleChange}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ê–ª–µ–∫—Å–µ–π, ¬´–ë–∞—Ä—Å¬ª"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm transition duration-300 ease-in-out transform focus:-translate-y-1 focus:outline-blue-300 hover:shadow-lg hover:border-blue-300 bg-gray-100"
                id="heroName-input"
              />
            </div>
          </div>
          <div>
            <div className="w-full p-5 bg-white rounded-lg font-mono">
              <label className='font-semibold text-lg'>2.–û—Ç–∫—É–¥–∞ –æ–Ω —Ä–æ–¥–æ–º?</label>
              <textarea
                name="heroOrigin"
                value={formData.heroOrigin}
                onChange={handleChange}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ì–æ—Ä–æ–¥ –ö—É—Ä–≥–∞–Ω, –≤—ã—Ä–æ—Å –Ω–∞ –±–µ—Ä–µ–≥—É –¢–æ–±–æ–ª–∞"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm transition duration-300 ease-in-out transform focus:-translate-y-1 focus:outline-blue-300 hover:shadow-lg hover:border-blue-300 bg-gray-100"
                id="heroOrigin-textarea"
              />
            </div>
          </div>
          <div>
            <div className="w-full p-5 bg-white rounded-lg mt-5 mb-5 font-semibold">
            <label className='font-semibold text-lg'>3.–ï—Å—Ç—å –ª–∏ —É –Ω–µ–≥–æ –æ—Å–æ–±–∞—è –≤–µ—â—å, —Å–∏–º–≤–æ–ª –∏–ª–∏ —Ç–∞–ª–∏—Å–º–∞–Ω? –ü–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ?</label>
              <textarea
                name="heroItem"
                value={formData.heroItem}
                onChange={handleChange}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ö—É–ª–æ–Ω —Å –∏–º–µ–Ω–µ–º –¥–æ—á–µ—Ä–∏"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm transition duration-300 ease-in-out transform focus:-translate-y-1 focus:outline-blue-300 hover:shadow-lg hover:border-blue-300 bg-gray-100"
                id="heroItem-textarea"
              />
            </div>
          </div>

          <h2 className='text-2xl text-center font-header_form'>–û —Å–ª—É–∂–±–µ</h2>
          <div>
            <div className="w-full p-5 bg-white rounded-lg mt-5 mb-5">
            <label className='font-semibold text-lg'>4.–ß–µ–º –æ–Ω –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–¥–æ–≤–æ–π?</label>
              <textarea
                name="job"
                value={formData.job}
                onChange={handleChange}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –†–∞–∑–≤–µ–¥—á–∏–∫ –≤ –≥—Ä—É–ø–ø–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm transition duration-300 ease-in-out transform focus:-translate-y-1 focus:outline-blue-300 hover:shadow-lg hover:border-blue-300 bg-gray-100"
                id="job-textarea"
              />
            </div>
          </div>
          <div>
            <div className="w-full p-5 bg-white rounded-lg font-mono  mt-5 mb-5">
              <label className='font-semibold text-lg'>5.–° –∫–∞–∫–æ–π —Ç–µ—Ö–Ω–∏–∫–æ–π –∏–ª–∏ –æ—Ä—É–∂–∏–µ–º –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç?</label>
              <textarea
                name="equipment"
                value={formData.equipment}
                onChange={handleChange}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –°–Ω–∞–π–ø–µ—Ä —Å –≤–∏–Ω—Ç–æ–≤–∫–æ–π –°–í–î"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm transition duration-300 ease-in-out transform focus:-translate-y-1 focus:outline-blue-300 hover:shadow-lg hover:border-blue-300 bg-gray-100"
                id="equipment-textarea"
              />
            </div>
          </div>

          <h2 className='text-2xl text-center font-header_form'>–û —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ, –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –∫–æ–º–∞–Ω–¥–µ</h2>
          <div>
            <div className="w-full p-5 bg-white rounded-lg font-mono mt-5 mb-5">
            <label className='font-semibold text-lg'>6.–ß—Ç–æ –¥–∞—ë—Ç –µ–º—É —Å–∏–ª—É –∏ –º–æ—Ç–∏–≤–∞—Ü–∏—é? –ö–∞–∫–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ —Ü–µ–Ω–∏—Ç?</label>
              <textarea
                name="motivation"
                value={formData.motivation}
                onChange={handleChange}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –í–µ—Ä–∞ –≤ –ø–æ–±–µ–¥—É –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–æ–¥–Ω—ã—Ö"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm transition duration-300 ease-in-out transform focus:-translate-y-1 focus:outline-blue-300 hover:shadow-lg hover:border-blue-300 bg-gray-100"
                id="motivation-textarea"
              />
            </div>
          </div>
          <div>
            <div className="w-full p-5 bg-white rounded-lg font-mono mt-5 mb-5">
            <label className='font-semibold text-lg'>7.–ö—Ç–æ –µ–≥–æ –±–æ–µ–≤—ã–µ —Ç–æ–≤–∞—Ä–∏—â–∏?</label>
              <textarea 
                name="comrades"
                value={formData.comrades}
                onChange={handleChange}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¢—Ä–∞–¥–∏—Ü–∏–∏ –∏ —Ä–∏—Ç—É–∞–ª—ã –≤ —Å–ø–ª–æ—á—ë–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm transition duration-300 ease-in-out transform focus:-translate-y-1 focus:outline-blue-300 hover:shadow-lg hover:border-blue-300 bg-gray-100"
                id="comrades-textarea"
              />
            </div>
          </div>

          <h2 className='text-2xl text-center font-header_form'>–õ–∏—á–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –≤ –ø–µ—Å–Ω—é</h2>
          <div>
            <div className="w-full p-5 bg-white rounded-lg font-mono mt-5 mb-5">
            <label className='font-semibold text-lg'>8.–ö–∞–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã –∏–∑ –∂–∏–∑–Ω–∏ –≥–µ—Ä–æ—è –¥–æ–ª–∂–Ω—ã –ø—Ä–æ–∑–≤—É—á–∞—Ç—å?</label>
              <textarea
                name="moments"
                value={formData.moments}
                onChange={handleChange}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ü–µ—Ä–≤—ã–µ –¥–Ω–∏ –Ω–∞ —Å–ª—É–∂–±–µ, –ø–æ–±–µ–¥—ã –∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm transition duration-300 ease-in-out transform focus:-translate-y-1 focus:outline-blue-300 hover:shadow-lg hover:border-blue-300 bg-gray-100"
                id="moments-textarea"
              />
            </div>
          </div>
          <div>
            <div className="w-full p-5 bg-white rounded-lg font-mono mt-5 mb-5">
            <label className='font-semibold text-lg'>9.–ö–∞–∫–∏–µ —Å–ª–æ–≤–∞, —Ü–∏—Ç–∞—Ç—ã –∏–ª–∏ –æ–±–µ—â–∞–Ω–∏—è –≤–∞–∂–Ω–æ –≤–∫–ª—é—á–∏—Ç—å?</label>
              <textarea
                name="words"
                value={formData.words}
                onChange={handleChange}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: ¬´–ë—Ä–∞—Ç –∑–∞ –±—Ä–∞—Ç–∞, –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–±—ã—Ç!¬ª"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg shadow-sm transition duration-300 ease-in-out transform focus:-translate-y-1 focus:outline-blue-300 hover:shadow-lg hover:border-blue-300 bg-gray-100"
                id="words-textarea"
              />
            </div>
          </div>
          <div>
             <h2 className='text-2xl text-center font-header_form'>–ß—Ç–æ –µ—â—ë –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å?</h2>
            <div className="w-full p-5 bg-white rounded-lg font-mono mt-5 mb-5">
            <label className='font-semibold text-lg'>–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Å–ª—É–∂–±–µ</label>
              <textarea
                name="remembranceText"
                value={formData.remembranceText}
                onChange={handleChange}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ —Å–ª—É–∂–±–µ"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg"
                required
              />
              <label className='font-semibold text-lg'>–õ–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ</label>
              <textarea
                name="personalMessageText"
                value={formData.personalMessageText}
                onChange={handleChange}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ª–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg"
                required
              />
              <label className='font-semibold text-lg'>–û—Å–æ–±—ã–µ —Ñ—Ä–∞–∑—ã, —Ü–∏—Ç–∞—Ç—ã</label>
              <textarea
                name="specialPhrasesText"
                value={formData.specialPhrasesText}
                onChange={handleChange}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –æ—Å–æ–±—ã–µ —Ñ—Ä–∞–∑—ã –∏–ª–∏ —Ü–∏—Ç–∞—Ç—ã"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg"
                required
              />
              <label className='font-semibold text-lg'>–ü–æ—Å–ª–∞–Ω–∏–µ –≤ –±—É–¥—É—â–µ–µ</label>
              <textarea
                name="futureMessageText"
                value={formData.futureMessageText}
                onChange={handleChange}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–æ—Å–ª–∞–Ω–∏–µ –≤ –±—É–¥—É—â–µ–µ"
                className="mt-6 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg"
                required
              />
              <label className='font-semibold text-lg'>üìù –î—Ä—É–≥–æ–µ:</label>
              <textarea
                name="otherText"
                value={formData.otherText}
                onChange={handleChange}
                placeholder="–í–∞—à —Ç–µ–∫—Å—Ç"
                className="mt-5 text-sm custom-input w-full px-4 py-2 border border-gray-300 rounded-lg"
                required
              />
            </div>   
          </div>
          <button type="submit" className='w-full bg-green-900 py-3 mt-3 rounded-2xl'>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
        </form>
      </div>
      {showPopup && (
        <div 
          style={{
            position: "fixed",
            top: 0,
            left: 0,
            width: "100%",
            height: "100%",
            backdropFilter: "blur(5px)",
            backgroundColor: "rgba(0,0,0,0.3)",
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            zIndex: 999
          }}
        >
          <div 
            style={{
              // background: "#fff",
              // padding: "20px",
              borderRadius: "8px",
              position: "relative"
            }}
          >
            <Reciepie price={totalPrice}/>
          </div>
        </div>
      )}
    </>
  );
}

SurveyForm.propTypes = {
  price: PropTypes.number
};
